# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    locale: 'en'
    app_locales_array: ['en', 'fr', 'es']
    # @todo delete
    app_mail_from: 'contact@captaincoaster.com'
    app_contact_mail_to: '%app_mail_from%'
    app_mail_from_name: 'Captain Coaster'
    app_banner_font_path: '%kernel.project_dir%/public/upload'
    app_banner_target_path: '%kernel.project_dir%/public/images/banners'
    app_banner_background_path: '%kernel.project_dir%/public/images/background-banner.png'
    router.request_context.host: '%env(APP_CONTEXT_HOST)%'
    router.request_context.scheme: '%env(APP_CONTEXT_SCHEME)%'
    pictures_cdn_host: '%env(PICTURES_CDN)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Service\ImageManager:
        arguments:
            $distributionId: '%env(AWS_CF_DISTRIBUTION_ID)%'
            $s3CacheBucket: '%env(AWS_S3_CACHE_BUCKET_NAME)%'

    App\Service\BannerMaker:
        arguments:
            $imagine: '@liip_imagine.imagick'
            $fontPath: '%app_banner_font_path%'
            $targetPath: '%app_banner_target_path%'
            $backgroundPath: '%app_banner_background_path%'

    App\Service\NotificationService:
        arguments:
            $emailFrom: '%app_mail_from%'
            $emailFromName: '%app_mail_from_name%'

    App\Service\SitemapService:
        arguments:
            $locales: '%app_locales_array%'

    App\Doctrine\ImageListener:
        tags:
            - {name: doctrine.event_listener, event: prePersist, lazy: true}
            - {name: doctrine.event_listener, event: postUpdate, lazy: true}
            - {name: doctrine.event_listener, event: preRemove, lazy: true}
            - {name: doctrine.event_listener, event: postRemove, lazy: true}

    App\Doctrine\CoasterListener:
        tags:
            - {name: doctrine.event_listener, event: postPersist, lazy: true}
            - {name: doctrine.event_listener, event: postUpdate, lazy: true}
            - {name: doctrine.event_listener, event: postRemove, lazy: true}

    App\Doctrine\LikedImageListener:
        tags:
            - {name: doctrine.event_listener, event: postPersist, lazy: true}
            - {name: doctrine.event_listener, event: postRemove, lazy: true}

    Gedmo\Sluggable\SluggableListener:
        alias: stof_doctrine_extensions.listener.sluggable

    Aws\S3\S3Client:
        arguments:
            -
                version: '2006-03-01'
                region: 'eu-west-3'
                credentials:
                    key: '%env(AWS_S3_ACCESS_ID)%'
                    secret: '%env(AWS_S3_ACCESS_SECRET)%'

    Aws\CloudFront\CloudFrontClient:
        arguments:
            -
                version: 'latest'
                region: 'eu-west-3'
                credentials:
                    key: '%env(AWS_S3_ACCESS_ID)%'
                    secret: '%env(AWS_S3_ACCESS_SECRET)%'
