# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/service_container.html
parameters:
    router.request_context.host: '%context_host%'
    router.request_context.scheme: '%context_scheme%'

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    BddBundle\:
        resource: '../../src/BddBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/BddBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    BddBundle\Controller\:
        resource: '../../src/BddBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    BddBundle\Service\ImageManager:
        arguments:
            $basePath: '%base_path_images%'
            $watermarkPath: '%watermark_path%'
            $jpegoptimPath: '%jpegoptim_path%'
            $imagine: '@liip_imagine.imagick'
            $cacheManager: '@liip_imagine.cache.manager'

    BddBundle\Service\BannerMaker:
        arguments:
            $imagine: '@liip_imagine.imagick'
            $fontPath: '%banner_font_path%'
            $targetPath: '%banner_target_path%'
            $backgroundPath: '%banner_background_path%'

    BddBundle\Service\NotificationService:
        arguments:
            $emailFrom: '%mail_from%'
            $emailFromName: '%mail_from_name%'

    BddBundle\Service\SitemapService:
        arguments:
            $locales: '%app.locales.array%'

    BddBundle\Service\DiscordService:
        arguments:
            $channels: '%discord_channels%'
        public: true

    BddBundle\Doctrine\ImageListener:
        tags:
        - {name: doctrine.event_listener, event: prePersist, lazy: true}
        - {name: doctrine.event_listener, event: postUpdate, lazy: true}
        - {name: doctrine.event_listener, event: preRemove, lazy: true}
        - {name: doctrine.event_listener, event: postRemove, lazy: true}

    BddBundle\Doctrine\CoasterListener:
        tags:
        - {name: doctrine.event_listener, event: postPersist, lazy: true}
        - {name: doctrine.event_listener, event: postUpdate, lazy: true}
        - {name: doctrine.event_listener, event: postRemove, lazy: true}

    BddBundle\Doctrine\LikedImageListener:
        tags:
        - {name: doctrine.event_listener, event: postPersist, lazy: true}
        - {name: doctrine.event_listener, event: postRemove, lazy: true}

    my.custom.user_provider:
        class: BddBundle\Security\Core\User\CustomUserProvider
        arguments:
            $userManager: '@fos_user.user_manager'
            $properties: {facebook: facebookId, google: googleId}
            $validator: '@validator'

    Twig\Extensions\IntlExtension:
        tags: [twig.extension]

    Gedmo\Sluggable\SluggableListener:
        alias: stof_doctrine_extensions.listener.sluggable
