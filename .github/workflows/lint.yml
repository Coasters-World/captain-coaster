name: "Lint"

on:
    pull_request:
    push:
        branches:
            - main

jobs:
    php-cs-fixer:
        name: PHP-CS-Fixer
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout code
                uses: actions/checkout@v3

            -   name: PHP-CS-Fixer
                uses: docker://oskarstark/php-cs-fixer-ga@sha256:eb83f3ed231a8f8a5000960d0fb11e20b2de86c0c957791e978f4ee4e5590e74
                with:
                    args: --diff --dry-run

            -   name: Install PHP with extensions
                uses: shivammathur/setup-php@v2
                with:
                    coverage: none
                    extensions: intl
                    php-version: '8.3'
                    tools: composer:v2

            -   name: Set composer cache directory
                id: composer-cache
                run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

            -   name: Cache composer
                uses: actions/cache@v3
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
                    restore-keys: ${{ runner.os }}-composer-

            -   name: Install dependencies
                id: install
                run: composer install --ansi --no-interaction --no-progress

            -   name: Lint Twig templates
                if: always() && steps.install.outcome == 'success'
                run: ./bin/console lint:twig templates --env=prod

            -   name: Lint Parameters and Services
                if: always() && steps.install.outcome == 'success'
                run: ./bin/console lint:container --no-debug

            -   name: Lint Doctrine entities
                if: always() && steps.install.outcome == 'success'
                run: ./bin/console doctrine:schema:validate --skip-sync -vvv --no-interaction

            -   name: Lint Composer config
                if: always() && steps.install.outcome == 'success'
                run: composer validate --strict

            -   name: Check if any dependencies are compromised
                if: always() && steps.install.outcome == 'success'
                run: composer audit
